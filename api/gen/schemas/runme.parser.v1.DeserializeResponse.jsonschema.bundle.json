{
  "$defs": {
    "google.protobuf.BoolValue.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "description": "The bool value.",
      "title": "Bool Value",
      "type": "boolean"
    },
    "google.protobuf.Int64Value.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "pattern": "^-?[0-9]+$",
          "type": "string"
        }
      ],
      "description": "The int64 value.",
      "title": "Int64 Value"
    },
    "google.protobuf.UInt32Value.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "anyOf": [
        {
          "maximum": 4294967295,
          "minimum": 0,
          "type": "integer"
        },
        {
          "pattern": "^[0-9]+$",
          "type": "string"
        }
      ],
      "description": "The uint32 value.",
      "title": "U Int32 Value"
    },
    "runme.parser.v1.Cell.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(call_id)$": {
          "default": "",
          "description": "CallID is the unique identifier of the cell call.",
          "type": "string"
        },
        "^(doc_results)$": {
          "description": "DocResults are doc results for a cell returned by, e.g., file search",
          "items": {
            "$ref": "#/$defs/runme.parser.v1.DocResult.jsonschema.json"
          },
          "type": "array"
        },
        "^(execution_summary)$": {
          "$ref": "#/$defs/runme.parser.v1.CellExecutionSummary.jsonschema.json",
          "description": "ExecutionSummary is the summary of the cell execution, e.g. success/failure and execution time."
        },
        "^(language_id)$": {
          "default": "",
          "description": "LanguageID is the language of the cell.",
          "type": "string"
        },
        "^(ref_id)$": {
          "default": "",
          "description": "RefID is the agent's original unique identifier.",
          "type": "string"
        },
        "^(text_range)$": {
          "$ref": "#/$defs/runme.parser.v1.TextRange.jsonschema.json",
          "description": "TextRange is the range of the cell covering in the markdown source."
        }
      },
      "properties": {
        "callId": {
          "default": "",
          "description": "CallID is the unique identifier of the cell call.",
          "type": "string"
        },
        "docResults": {
          "description": "DocResults are doc results for a cell returned by, e.g., file search",
          "items": {
            "$ref": "#/$defs/runme.parser.v1.DocResult.jsonschema.json"
          },
          "type": "array"
        },
        "executionSummary": {
          "$ref": "#/$defs/runme.parser.v1.CellExecutionSummary.jsonschema.json",
          "description": "ExecutionSummary is the summary of the cell execution, e.g. success/failure and execution time."
        },
        "kind": {
          "anyOf": [
            {
              "pattern": "^CELL_KIND_UNSPECIFIED$",
              "type": "string"
            },
            {
              "enum": [
                "CELL_KIND_MARKUP",
                "CELL_KIND_CODE",
                "CELL_KIND_DOC_RESULTS"
              ],
              "type": "string"
            },
            {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          ],
          "default": 0,
          "description": "CellKind is the type of cell, e.g. markup or code.",
          "title": "Cell Kind"
        },
        "languageId": {
          "default": "",
          "description": "LanguageID is the language of the cell.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata is additional metadata about the cell in k/v format.",
          "propertyNames": {
            "type": "string"
          },
          "type": "object"
        },
        "outputs": {
          "description": "Outputs are the outputs of the cell, e.g. stdout, stderr, or other media types.",
          "items": {
            "$ref": "#/$defs/runme.parser.v1.CellOutput.jsonschema.json"
          },
          "type": "array"
        },
        "refId": {
          "default": "",
          "description": "RefID is the agent's original unique identifier.",
          "type": "string"
        },
        "role": {
          "anyOf": [
            {
              "pattern": "^CELL_ROLE_UNSPECIFIED$",
              "type": "string"
            },
            {
              "enum": [
                "CELL_ROLE_USER",
                "CELL_ROLE_ASSISTANT"
              ],
              "type": "string"
            },
            {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          ],
          "default": 0,
          "description": "Role is the role of the cell, e.g. user or assistant.",
          "title": "Cell Role"
        },
        "textRange": {
          "$ref": "#/$defs/runme.parser.v1.TextRange.jsonschema.json",
          "description": "TextRange is the range of the cell covering in the markdown source."
        },
        "value": {
          "default": "",
          "description": "Value is the contents of the cell.",
          "type": "string"
        }
      },
      "title": "Cell",
      "type": "object"
    },
    "runme.parser.v1.CellExecutionSummary.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(execution_order)$": {
          "$ref": "#/$defs/google.protobuf.UInt32Value.jsonschema.json"
        }
      },
      "properties": {
        "executionOrder": {
          "$ref": "#/$defs/google.protobuf.UInt32Value.jsonschema.json"
        },
        "success": {
          "$ref": "#/$defs/google.protobuf.BoolValue.jsonschema.json"
        },
        "timing": {
          "$ref": "#/$defs/runme.parser.v1.ExecutionSummaryTiming.jsonschema.json"
        }
      },
      "title": "Cell Execution Summary",
      "type": "object"
    },
    "runme.parser.v1.CellOutput.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(process_info)$": {
          "$ref": "#/$defs/runme.parser.v1.CellOutputProcessInfo.jsonschema.json"
        }
      },
      "properties": {
        "items": {
          "items": {
            "$ref": "#/$defs/runme.parser.v1.CellOutputItem.jsonschema.json"
          },
          "type": "array"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "propertyNames": {
            "type": "string"
          },
          "type": "object"
        },
        "processInfo": {
          "$ref": "#/$defs/runme.parser.v1.CellOutputProcessInfo.jsonschema.json"
        }
      },
      "title": "Cell Output",
      "type": "object"
    },
    "runme.parser.v1.CellOutputItem.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "data": {
          "default": null,
          "pattern": "^[A-Za-z0-9+/]*={0,2}$",
          "type": "string"
        },
        "mime": {
          "default": "",
          "type": "string"
        },
        "type": {
          "default": "",
          "type": "string"
        }
      },
      "title": "Cell Output Item",
      "type": "object"
    },
    "runme.parser.v1.CellOutputProcessInfo.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(exit_reason)$": {
          "$ref": "#/$defs/runme.parser.v1.ProcessInfoExitReason.jsonschema.json"
        }
      },
      "properties": {
        "exitReason": {
          "$ref": "#/$defs/runme.parser.v1.ProcessInfoExitReason.jsonschema.json"
        },
        "pid": {
          "$ref": "#/$defs/google.protobuf.Int64Value.jsonschema.json"
        }
      },
      "title": "Cell Output Process Info",
      "type": "object"
    },
    "runme.parser.v1.DeserializeResponse.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "notebook": {
          "$ref": "#/$defs/runme.parser.v1.Notebook.jsonschema.json"
        }
      },
      "title": "Deserialize Response",
      "type": "object"
    },
    "runme.parser.v1.DocResult.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(file_id)$": {
          "default": "",
          "description": "The unique ID of the file.",
          "type": "string"
        },
        "^(file_name)$": {
          "default": "",
          "description": "The name of the file.",
          "type": "string"
        }
      },
      "properties": {
        "fileId": {
          "default": "",
          "description": "The unique ID of the file.",
          "type": "string"
        },
        "fileName": {
          "default": "",
          "description": "The name of the file.",
          "type": "string"
        },
        "link": {
          "default": "",
          "description": "Link to display for this file",
          "type": "string"
        },
        "score": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "enum": [
                "Infinity",
                "-Infinity",
                "NaN"
              ],
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "default": 0,
          "description": "The relevance score of the file."
        }
      },
      "title": "Doc Result",
      "type": "object"
    },
    "runme.parser.v1.ExecutionSummaryTiming.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(end_time)$": {
          "$ref": "#/$defs/google.protobuf.Int64Value.jsonschema.json"
        },
        "^(start_time)$": {
          "$ref": "#/$defs/google.protobuf.Int64Value.jsonschema.json"
        }
      },
      "properties": {
        "endTime": {
          "$ref": "#/$defs/google.protobuf.Int64Value.jsonschema.json"
        },
        "startTime": {
          "$ref": "#/$defs/google.protobuf.Int64Value.jsonschema.json"
        }
      },
      "title": "Execution Summary Timing",
      "type": "object"
    },
    "runme.parser.v1.Frontmatter.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(skip_prompts)$": {
          "default": false,
          "type": "boolean"
        },
        "^(terminal_rows)$": {
          "default": "",
          "type": "string"
        }
      },
      "properties": {
        "category": {
          "default": "",
          "description": "Deprecated category in favor of Tag",
          "type": "string"
        },
        "cwd": {
          "default": "",
          "type": "string"
        },
        "runme": {
          "$ref": "#/$defs/runme.parser.v1.FrontmatterRunme.jsonschema.json"
        },
        "shell": {
          "default": "",
          "type": "string"
        },
        "skipPrompts": {
          "default": false,
          "type": "boolean"
        },
        "tag": {
          "default": "",
          "type": "string"
        },
        "terminalRows": {
          "default": "",
          "type": "string"
        }
      },
      "title": "Frontmatter",
      "type": "object"
    },
    "runme.parser.v1.FrontmatterRunme.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "id": {
          "default": "",
          "type": "string"
        },
        "session": {
          "$ref": "#/$defs/runme.parser.v1.RunmeSession.jsonschema.json"
        },
        "version": {
          "default": "",
          "type": "string"
        }
      },
      "title": "Frontmatter Runme",
      "type": "object"
    },
    "runme.parser.v1.Notebook.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "cells": {
          "items": {
            "$ref": "#/$defs/runme.parser.v1.Cell.jsonschema.json"
          },
          "type": "array"
        },
        "frontmatter": {
          "$ref": "#/$defs/runme.parser.v1.Frontmatter.jsonschema.json"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "propertyNames": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "title": "Notebook",
      "type": "object"
    },
    "runme.parser.v1.ProcessInfoExitReason.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "code": {
          "$ref": "#/$defs/google.protobuf.UInt32Value.jsonschema.json"
        },
        "type": {
          "default": "",
          "type": "string"
        }
      },
      "title": "Process Info Exit Reason",
      "type": "object"
    },
    "runme.parser.v1.RunmeSession.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "document": {
          "$ref": "#/$defs/runme.parser.v1.RunmeSessionDocument.jsonschema.json"
        },
        "id": {
          "default": "",
          "type": "string"
        }
      },
      "title": "Runme Session",
      "type": "object"
    },
    "runme.parser.v1.RunmeSessionDocument.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "patternProperties": {
        "^(relative_path)$": {
          "default": "",
          "type": "string"
        }
      },
      "properties": {
        "relativePath": {
          "default": "",
          "type": "string"
        }
      },
      "title": "Runme Session Document",
      "type": "object"
    },
    "runme.parser.v1.TextRange.jsonschema.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "end": {
          "anyOf": [
            {
              "maximum": 4294967295,
              "minimum": 0,
              "type": "integer"
            },
            {
              "pattern": "^[0-9]+$",
              "type": "string"
            }
          ],
          "default": 0
        },
        "start": {
          "anyOf": [
            {
              "maximum": 4294967295,
              "minimum": 0,
              "type": "integer"
            },
            {
              "pattern": "^[0-9]+$",
              "type": "string"
            }
          ],
          "default": 0
        }
      },
      "title": "Text Range",
      "type": "object"
    }
  },
  "$id": "runme.parser.v1.DeserializeResponse.jsonschema.bundle.json",
  "$ref": "#/$defs/runme.parser.v1.DeserializeResponse.jsonschema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema"
}
