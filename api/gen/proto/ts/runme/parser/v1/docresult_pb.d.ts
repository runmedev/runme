/* eslint-disable */
// @generated by protobuf-ts 2.11.1 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "runme/parser/v1/docresult.proto" (package "runme.parser.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message runme.parser.v1.DocResult
 */
export interface DocResult {
    /**
     * The unique ID of the file.
     *
     * @generated from protobuf field: string file_id = 1
     */
    fileId: string;
    /**
     * The name of the file.
     *
     * @generated from protobuf field: string file_name = 2
     */
    fileName: string;
    /**
     * The relevance score of the file.
     *
     * @generated from protobuf field: double score = 3
     */
    score: number;
    /**
     * Link to display for this file
     *
     * @generated from protobuf field: string link = 4
     */
    link: string;
}
declare class DocResult$Type extends MessageType<DocResult> {
    constructor();
    create(value?: PartialMessage<DocResult>): DocResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocResult): DocResult;
    internalBinaryWrite(message: DocResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message runme.parser.v1.DocResult
 */
export declare const DocResult: DocResult$Type;
export {};
