/* eslint-disable */
// @generated by protobuf-ts 2.11.1 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "agent/v1/webapp.proto" (package "agent.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class WebAppConfig$Type extends MessageType {
    constructor() {
        super("agent.v1.WebAppConfig", [
            { no: 1, name: "runner", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "reconnect", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "inverted_order", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.runner = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string runner */ 1:
                    message.runner = reader.string();
                    break;
                case /* optional bool reconnect */ 2:
                    message.reconnect = reader.bool();
                    break;
                case /* optional bool inverted_order */ 3:
                    message.invertedOrder = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string runner = 1; */
        if (message.runner !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.runner);
        /* optional bool reconnect = 2; */
        if (message.reconnect !== undefined)
            writer.tag(2, WireType.Varint).bool(message.reconnect);
        /* optional bool inverted_order = 3; */
        if (message.invertedOrder !== undefined)
            writer.tag(3, WireType.Varint).bool(message.invertedOrder);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message agent.v1.WebAppConfig
 */
export const WebAppConfig = new WebAppConfig$Type();
