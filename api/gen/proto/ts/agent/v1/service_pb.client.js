/* eslint-disable */
// @generated by protobuf-ts 2.11.1 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "agent/v1/service.proto" (package "agent.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
/* eslint-disable */
// @generated by protobuf-ts 2.11.1 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "agent/v1/service.proto" (package "agent.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { LogService } from "./service_pb";
import { MessagesService } from "./service_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * MessagesService generates blocks.
 *
 * @generated from protobuf service agent.v1.MessagesService
 */
export class MessagesServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = MessagesService.typeName;
        this.methods = MessagesService.methods;
        this.options = MessagesService.options;
    }
    /**
     * Generate generates cells. Responses are streamed.
     *
     * @generated from protobuf rpc: Generate
     */
    generate(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("serverStreaming", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service agent.v1.LogService
 */
export class LogServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = LogService.typeName;
        this.methods = LogService.methods;
        this.options = LogService.options;
    }
    /**
     * @generated from protobuf rpc: Log
     */
    log(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
