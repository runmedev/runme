// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: runme/parser/v1/docresult.proto

package parserv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DocResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the file.
	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	// The name of the file.
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// The relevance score of the file.
	Score float64 `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`
	// Link to display for this file
	Link          string `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"` // TOO(jlewi): Should we include the file contents?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocResult) Reset() {
	*x = DocResult{}
	mi := &file_runme_parser_v1_docresult_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocResult) ProtoMessage() {}

func (x *DocResult) ProtoReflect() protoreflect.Message {
	mi := &file_runme_parser_v1_docresult_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocResult.ProtoReflect.Descriptor instead.
func (*DocResult) Descriptor() ([]byte, []int) {
	return file_runme_parser_v1_docresult_proto_rawDescGZIP(), []int{0}
}

func (x *DocResult) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DocResult) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DocResult) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *DocResult) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

var File_runme_parser_v1_docresult_proto protoreflect.FileDescriptor

const file_runme_parser_v1_docresult_proto_rawDesc = "" +
	"\n" +
	"\x1frunme/parser/v1/docresult.proto\x12\x0frunme.parser.v1\"k\n" +
	"\tDocResult\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1b\n" +
	"\tfile_name\x18\x02 \x01(\tR\bfileName\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x01R\x05score\x12\x12\n" +
	"\x04link\x18\x04 \x01(\tR\x04linkBHZFgithub.com/runmedev/runme/v3/api/gen/proto/go/runme/parser/v1;parserv1b\x06proto3"

var (
	file_runme_parser_v1_docresult_proto_rawDescOnce sync.Once
	file_runme_parser_v1_docresult_proto_rawDescData []byte
)

func file_runme_parser_v1_docresult_proto_rawDescGZIP() []byte {
	file_runme_parser_v1_docresult_proto_rawDescOnce.Do(func() {
		file_runme_parser_v1_docresult_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runme_parser_v1_docresult_proto_rawDesc), len(file_runme_parser_v1_docresult_proto_rawDesc)))
	})
	return file_runme_parser_v1_docresult_proto_rawDescData
}

var file_runme_parser_v1_docresult_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_runme_parser_v1_docresult_proto_goTypes = []any{
	(*DocResult)(nil), // 0: runme.parser.v1.DocResult
}
var file_runme_parser_v1_docresult_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_runme_parser_v1_docresult_proto_init() }
func file_runme_parser_v1_docresult_proto_init() {
	if File_runme_parser_v1_docresult_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runme_parser_v1_docresult_proto_rawDesc), len(file_runme_parser_v1_docresult_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runme_parser_v1_docresult_proto_goTypes,
		DependencyIndexes: file_runme_parser_v1_docresult_proto_depIdxs,
		MessageInfos:      file_runme_parser_v1_docresult_proto_msgTypes,
	}.Build()
	File_runme_parser_v1_docresult_proto = out.File
	file_runme_parser_v1_docresult_proto_goTypes = nil
	file_runme_parser_v1_docresult_proto_depIdxs = nil
}
