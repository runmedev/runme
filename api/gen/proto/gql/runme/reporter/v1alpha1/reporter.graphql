directive @ReporterService on FIELD_DEFINITION
"""
 Wrapper message for `bool`.

 The JSON representation for `BoolValue` is JSON `true` and `false`.

 Not recommended for use in new APIs, but still useful for legacy APIs and
 has no plan to be removed.

"""
type BoolValue {
	"""
	 The bool value.

	"""
	value: Boolean
}
"""
 Wrapper message for `bool`.

 The JSON representation for `BoolValue` is JSON `true` and `false`.

 Not recommended for use in new APIs, but still useful for legacy APIs and
 has no plan to be removed.

"""
input BoolValueInput {
	"""
	 The bool value.

	"""
	value: Boolean
}
scalar Bytes
type Cell {
	"""
	 CellKind is the type of cell, e.g. markup or code.

	"""
	kind: CellKind
	"""
	 Value is the contents of the cell.

	"""
	value: String
	"""
	 LanguageID is the language of the cell.

	"""
	languageId: String
	"""
	 Metadata is additional metadata about the cell in k/v format.

	"""
	metadata: [Cell_MetadataEntry!]
	"""
	 TextRange is the range of the cell covering in the markdown source.

	"""
	textRange: TextRange
	"""
	 Outputs are the outputs of the cell, e.g. stdout, stderr, or other media types.

	"""
	outputs: [CellOutput!]
	"""
	 ExecutionSummary is the summary of the cell execution, e.g. success/failure and execution time.

	"""
	executionSummary: CellExecutionSummary
	"""
	 RefID is the agent's original unique identifier.

	"""
	refId: String
	"""
	 Role is the role of the cell, e.g. user or assistant.

	"""
	role: CellRole
	"""
	 CallID is the unique identifier of the cell call.

	"""
	callId: String
	"""
	 DocResults are doc results for a cell returned by, e.g., file search

	"""
	docResults: [DocResult!]
}
type CellExecutionSummary {
	executionOrder: UInt32Value
	success: BoolValue
	timing: ExecutionSummaryTiming
}
input CellExecutionSummaryInput {
	executionOrder: UInt32ValueInput
	success: BoolValueInput
	timing: ExecutionSummaryTimingInput
}
input CellInput {
	"""
	 CellKind is the type of cell, e.g. markup or code.

	"""
	kind: CellKind
	"""
	 Value is the contents of the cell.

	"""
	value: String
	"""
	 LanguageID is the language of the cell.

	"""
	languageId: String
	"""
	 Metadata is additional metadata about the cell in k/v format.

	"""
	metadata: [Cell_MetadataEntryInput!]
	"""
	 TextRange is the range of the cell covering in the markdown source.

	"""
	textRange: TextRangeInput
	"""
	 Outputs are the outputs of the cell, e.g. stdout, stderr, or other media types.

	"""
	outputs: [CellOutputInput!]
	"""
	 ExecutionSummary is the summary of the cell execution, e.g. success/failure and execution time.

	"""
	executionSummary: CellExecutionSummaryInput
	"""
	 RefID is the agent's original unique identifier.

	"""
	refId: String
	"""
	 Role is the role of the cell, e.g. user or assistant.

	"""
	role: CellRole
	"""
	 CallID is the unique identifier of the cell call.

	"""
	callId: String
	"""
	 DocResults are doc results for a cell returned by, e.g., file search

	"""
	docResults: [DocResultInput!]
}
enum CellKind {
	CELL_KIND_UNSPECIFIED
	CELL_KIND_MARKUP
	CELL_KIND_CODE
	"""
	 todo(sebastian): is this needed?

	"""
	CELL_KIND_DOC_RESULTS
}
type CellOutput {
	items: [CellOutputItem!]
	metadata: [CellOutput_MetadataEntry!]
	processInfo: CellOutputProcessInfo
}
input CellOutputInput {
	items: [CellOutputItemInput!]
	metadata: [CellOutput_MetadataEntryInput!]
	processInfo: CellOutputProcessInfoInput
}
type CellOutputItem {
	data: Bytes
	type: String
	mime: String
}
input CellOutputItemInput {
	data: Bytes
	type: String
	mime: String
}
type CellOutputProcessInfo {
	exitReason: ProcessInfoExitReason
	pid: Int64Value
}
input CellOutputProcessInfoInput {
	exitReason: ProcessInfoExitReasonInput
	pid: Int64ValueInput
}
type CellOutput_MetadataEntry {
	key: String
	value: String
}
input CellOutput_MetadataEntryInput {
	key: String
	value: String
}
enum CellRole {
	CELL_ROLE_UNSPECIFIED
	CELL_ROLE_USER
	CELL_ROLE_ASSISTANT
}
type Cell_MetadataEntry {
	key: String
	value: String
}
input Cell_MetadataEntryInput {
	key: String
	value: String
}
type DocResult {
	"""
	 The unique ID of the file.

	"""
	fileId: String
	"""
	 The name of the file.

	"""
	fileName: String
	"""
	 The relevance score of the file.

	"""
	score: Float
	"""
	 Link to display for this file

	 TOO(jlewi): Should we include the file contents?

	"""
	link: String
}
input DocResultInput {
	"""
	 The unique ID of the file.

	"""
	fileId: String
	"""
	 The name of the file.

	"""
	fileName: String
	"""
	 The relevance score of the file.

	"""
	score: Float
	"""
	 Link to display for this file

	 TOO(jlewi): Should we include the file contents?

	"""
	link: String
}
type ExecutionSummaryTiming {
	startTime: Int64Value
	endTime: Int64Value
}
input ExecutionSummaryTimingInput {
	startTime: Int64ValueInput
	endTime: Int64ValueInput
}
type Frontmatter {
	shell: String
	cwd: String
	skipPrompts: Boolean
	runme: FrontmatterRunme
	"""
	 Deprecated category in favor of Tag

	"""
	category: String
	terminalRows: String
	tag: String
}
input FrontmatterInput {
	shell: String
	cwd: String
	skipPrompts: Boolean
	runme: FrontmatterRunmeInput
	"""
	 Deprecated category in favor of Tag

	"""
	category: String
	terminalRows: String
	tag: String
}
type FrontmatterRunme {
	id: String
	version: String
	session: RunmeSession
}
input FrontmatterRunmeInput {
	id: String
	version: String
	session: RunmeSessionInput
}
"""
 Wrapper message for `int64`.

 The JSON representation for `Int64Value` is JSON string.

 Not recommended for use in new APIs, but still useful for legacy APIs and
 has no plan to be removed.

"""
type Int64Value {
	"""
	 The int64 value.

	"""
	value: Int
}
"""
 Wrapper message for `int64`.

 The JSON representation for `Int64Value` is JSON string.

 Not recommended for use in new APIs, but still useful for legacy APIs and
 has no plan to be removed.

"""
input Int64ValueInput {
	"""
	 The int64 value.

	"""
	value: Int
}
type Mutation {
	reporterServiceTransform(in: TransformRequestInput): TransformResponse
}
type Notebook {
	cells: [Cell!]
	metadata: [Notebook_MetadataEntry!]
	frontmatter: Frontmatter
}
input NotebookInput {
	cells: [CellInput!]
	metadata: [Notebook_MetadataEntryInput!]
	frontmatter: FrontmatterInput
}
type Notebook_MetadataEntry {
	key: String
	value: String
}
input Notebook_MetadataEntryInput {
	key: String
	value: String
}
type ProcessInfoExitReason {
	type: String
	code: UInt32Value
}
input ProcessInfoExitReasonInput {
	type: String
	code: UInt32ValueInput
}
type Query {
	dummy: Boolean
}
type ReporterDevice {
	macAddress: String
	hostname: String
	platform: String
	release: String
	arch: String
	vendor: String
	shell: String
	vsAppHost: String
	vsAppName: String
	vsAppSessionId: String
	vsMachineId: String
	vsMetadata: [ReporterDevice_VsMetadataEntry!]
}
type ReporterDevice_VsMetadataEntry {
	key: String
	value: String
}
type ReporterExtension {
	autoSave: Boolean
	git: ReporterGit
	file: ReporterFile
	session: ReporterSession
	device: ReporterDevice
}
type ReporterFile {
	path: String
	content: Bytes
}
type ReporterGit {
	repository: String
	branch: String
	commit: String
}
type ReporterSession {
	plainOutput: Bytes
	maskedOutput: Bytes
}
type RunmeSession {
	id: String
	document: RunmeSessionDocument
}
type RunmeSessionDocument {
	relativePath: String
}
input RunmeSessionDocumentInput {
	relativePath: String
}
input RunmeSessionInput {
	id: String
	document: RunmeSessionDocumentInput
}
type TextRange {
	start: Int
	end: Int
}
input TextRangeInput {
	start: Int
	end: Int
}
input TransformRequestExtensionInput {
	autoSave: Boolean
	repository: String
	branch: String
	commit: String
	filePath: String
	fileContent: Bytes
	plainOutput: Bytes
	maskedOutput: Bytes
	macAddress: String
	hostname: String
	platform: String
	release: String
	arch: String
	vendor: String
	shell: String
	vsAppHost: String
	vsAppName: String
	vsAppSessionId: String
	vsMachineId: String
	vsMetadata: [TransformRequestExtension_VsMetadataEntryInput!]
}
input TransformRequestExtension_VsMetadataEntryInput {
	key: String
	value: String
}
input TransformRequestInput {
	notebook: NotebookInput
	extension: TransformRequestExtensionInput
}
type TransformResponse {
	notebook: Notebook
	extension: ReporterExtension
}
"""
 Wrapper message for `uint32`.

 The JSON representation for `UInt32Value` is JSON number.

 Not recommended for use in new APIs, but still useful for legacy APIs and
 has no plan to be removed.

"""
type UInt32Value {
	"""
	 The uint32 value.

	"""
	value: Int
}
"""
 Wrapper message for `uint32`.

 The JSON representation for `UInt32Value` is JSON number.

 Not recommended for use in new APIs, but still useful for legacy APIs and
 has no plan to be removed.

"""
input UInt32ValueInput {
	"""
	 The uint32 value.

	"""
	value: Int
}
