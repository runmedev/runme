// @generated by protoc-gen-es v2.6.0 with parameter "target=js+dts,import_extension=none,json_types=true"
// @generated from file runme/parser/v1/parser.proto (package runme.parser.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import { file_runme_parser_v1_docresult } from "./docresult_pb";

/**
 * Describes the file runme/parser/v1/parser.proto.
 */
export const file_runme_parser_v1_parser = /*@__PURE__*/
  fileDesc("ChxydW5tZS9wYXJzZXIvdjEvcGFyc2VyLnByb3RvEg9ydW5tZS5wYXJzZXIudjEizwEKCE5vdGVib29rEiQKBWNlbGxzGAEgAygLMhUucnVubWUucGFyc2VyLnYxLkNlbGwSOQoIbWV0YWRhdGEYAiADKAsyJy5ydW5tZS5wYXJzZXIudjEuTm90ZWJvb2suTWV0YWRhdGFFbnRyeRIxCgtmcm9udG1hdHRlchgDIAEoCzIcLnJ1bm1lLnBhcnNlci52MS5Gcm9udG1hdHRlchovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEieAoWRXhlY3V0aW9uU3VtbWFyeVRpbWluZxIvCgpzdGFydF90aW1lGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSLQoIZW5kX3RpbWUYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSI6Cg5DZWxsT3V0cHV0SXRlbRIMCgRkYXRhGAEgASgMEgwKBHR5cGUYAiABKAkSDAoEbWltZRgDIAEoCSJRChVQcm9jZXNzSW5mb0V4aXRSZWFzb24SDAoEdHlwZRgBIAEoCRIqCgRjb2RlGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlIn4KFUNlbGxPdXRwdXRQcm9jZXNzSW5mbxI7CgtleGl0X3JlYXNvbhgBIAEoCzImLnJ1bm1lLnBhcnNlci52MS5Qcm9jZXNzSW5mb0V4aXRSZWFzb24SKAoDcGlkGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUi6AEKCkNlbGxPdXRwdXQSLgoFaXRlbXMYASADKAsyHy5ydW5tZS5wYXJzZXIudjEuQ2VsbE91dHB1dEl0ZW0SOwoIbWV0YWRhdGEYAiADKAsyKS5ydW5tZS5wYXJzZXIudjEuQ2VsbE91dHB1dC5NZXRhZGF0YUVudHJ5EjwKDHByb2Nlc3NfaW5mbxgDIAEoCzImLnJ1bm1lLnBhcnNlci52MS5DZWxsT3V0cHV0UHJvY2Vzc0luZm8aLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIrMBChRDZWxsRXhlY3V0aW9uU3VtbWFyeRI1Cg9leGVjdXRpb25fb3JkZXIYASABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWUSKwoHc3VjY2VzcxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSNwoGdGltaW5nGAMgASgLMicucnVubWUucGFyc2VyLnYxLkV4ZWN1dGlvblN1bW1hcnlUaW1pbmciJwoJVGV4dFJhbmdlEg0KBXN0YXJ0GAEgASgNEgsKA2VuZBgCIAEoDSLWAwoEQ2VsbBInCgRraW5kGAEgASgOMhkucnVubWUucGFyc2VyLnYxLkNlbGxLaW5kEg0KBXZhbHVlGAIgASgJEhMKC2xhbmd1YWdlX2lkGAMgASgJEjUKCG1ldGFkYXRhGAQgAygLMiMucnVubWUucGFyc2VyLnYxLkNlbGwuTWV0YWRhdGFFbnRyeRIuCgp0ZXh0X3JhbmdlGAUgASgLMhoucnVubWUucGFyc2VyLnYxLlRleHRSYW5nZRIsCgdvdXRwdXRzGAYgAygLMhsucnVubWUucGFyc2VyLnYxLkNlbGxPdXRwdXQSQAoRZXhlY3V0aW9uX3N1bW1hcnkYByABKAsyJS5ydW5tZS5wYXJzZXIudjEuQ2VsbEV4ZWN1dGlvblN1bW1hcnkSDgoGcmVmX2lkGGQgASgJEicKBHJvbGUYZSABKA4yGS5ydW5tZS5wYXJzZXIudjEuQ2VsbFJvbGUSDwoHY2FsbF9pZBhmIAEoCRIvCgtkb2NfcmVzdWx0cxhnIAMoCzIaLnJ1bm1lLnBhcnNlci52MS5Eb2NSZXN1bHQaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIi0KFFJ1bm1lU2Vzc2lvbkRvY3VtZW50EhUKDXJlbGF0aXZlX3BhdGgYASABKAkiUwoMUnVubWVTZXNzaW9uEgoKAmlkGAEgASgJEjcKCGRvY3VtZW50GAIgASgLMiUucnVubWUucGFyc2VyLnYxLlJ1bm1lU2Vzc2lvbkRvY3VtZW50Il8KEEZyb250bWF0dGVyUnVubWUSCgoCaWQYASABKAkSDwoHdmVyc2lvbhgCIAEoCRIuCgdzZXNzaW9uGAMgASgLMh0ucnVubWUucGFyc2VyLnYxLlJ1bm1lU2Vzc2lvbiKnAQoLRnJvbnRtYXR0ZXISDQoFc2hlbGwYASABKAkSCwoDY3dkGAIgASgJEhQKDHNraXBfcHJvbXB0cxgDIAEoCBIwCgVydW5tZRgEIAEoCzIhLnJ1bm1lLnBhcnNlci52MS5Gcm9udG1hdHRlclJ1bm1lEhAKCGNhdGVnb3J5GAUgASgJEhUKDXRlcm1pbmFsX3Jvd3MYBiABKAkSCwoDdGFnGAcgASgJIk0KGURlc2VyaWFsaXplUmVxdWVzdE9wdGlvbnMSMAoIaWRlbnRpdHkYASABKA4yHi5ydW5tZS5wYXJzZXIudjEuUnVubWVJZGVudGl0eSJhChJEZXNlcmlhbGl6ZVJlcXVlc3QSDgoGc291cmNlGAEgASgMEjsKB29wdGlvbnMYAiABKAsyKi5ydW5tZS5wYXJzZXIudjEuRGVzZXJpYWxpemVSZXF1ZXN0T3B0aW9ucyJCChNEZXNlcmlhbGl6ZVJlc3BvbnNlEisKCG5vdGVib29rGAEgASgLMhkucnVubWUucGFyc2VyLnYxLk5vdGVib29rIkEKHVNlcmlhbGl6ZVJlcXVlc3RPdXRwdXRPcHRpb25zEg8KB2VuYWJsZWQYASABKAgSDwoHc3VtbWFyeRgCIAEoCCKKAQoXU2VyaWFsaXplUmVxdWVzdE9wdGlvbnMSPwoHb3V0cHV0cxgBIAEoCzIuLnJ1bm1lLnBhcnNlci52MS5TZXJpYWxpemVSZXF1ZXN0T3V0cHV0T3B0aW9ucxIuCgdzZXNzaW9uGAIgASgLMh0ucnVubWUucGFyc2VyLnYxLlJ1bm1lU2Vzc2lvbiJ6ChBTZXJpYWxpemVSZXF1ZXN0EisKCG5vdGVib29rGAEgASgLMhkucnVubWUucGFyc2VyLnYxLk5vdGVib29rEjkKB29wdGlvbnMYAiABKAsyKC5ydW5tZS5wYXJzZXIudjEuU2VyaWFsaXplUmVxdWVzdE9wdGlvbnMiIwoRU2VyaWFsaXplUmVzcG9uc2USDgoGcmVzdWx0GAEgASgMKmoKCENlbGxLaW5kEhkKFUNFTExfS0lORF9VTlNQRUNJRklFRBAAEhQKEENFTExfS0lORF9NQVJLVVAQARISCg5DRUxMX0tJTkRfQ09ERRACEhkKFUNFTExfS0lORF9ET0NfUkVTVUxUUxADKlIKCENlbGxSb2xlEhkKFUNFTExfUk9MRV9VTlNQRUNJRklFRBAAEhIKDkNFTExfUk9MRV9VU0VSEAESFwoTQ0VMTF9ST0xFX0FTU0lTVEFOVBACKn0KDVJ1bm1lSWRlbnRpdHkSHgoaUlVOTUVfSURFTlRJVFlfVU5TUEVDSUZJRUQQABIWChJSVU5NRV9JREVOVElUWV9BTEwQARIbChdSVU5NRV9JREVOVElUWV9ET0NVTUVOVBACEhcKE1JVTk1FX0lERU5USVRZX0NFTEwQAzLBAQoNUGFyc2VyU2VydmljZRJaCgtEZXNlcmlhbGl6ZRIjLnJ1bm1lLnBhcnNlci52MS5EZXNlcmlhbGl6ZVJlcXVlc3QaJC5ydW5tZS5wYXJzZXIudjEuRGVzZXJpYWxpemVSZXNwb25zZSIAElQKCVNlcmlhbGl6ZRIhLnJ1bm1lLnBhcnNlci52MS5TZXJpYWxpemVSZXF1ZXN0GiIucnVubWUucGFyc2VyLnYxLlNlcmlhbGl6ZVJlc3BvbnNlIgBCSFpGZ2l0aHViLmNvbS9ydW5tZWRldi9ydW5tZS92My9hcGkvZ2VuL3Byb3RvL2dvL3J1bm1lL3BhcnNlci92MTtwYXJzZXJ2MWIGcHJvdG8z", [file_google_protobuf_wrappers, file_runme_parser_v1_docresult]);

/**
 * Describes the message runme.parser.v1.Notebook.
 * Use `create(NotebookSchema)` to create a new message.
 */
export const NotebookSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 0);

/**
 * Describes the message runme.parser.v1.ExecutionSummaryTiming.
 * Use `create(ExecutionSummaryTimingSchema)` to create a new message.
 */
export const ExecutionSummaryTimingSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 1);

/**
 * Describes the message runme.parser.v1.CellOutputItem.
 * Use `create(CellOutputItemSchema)` to create a new message.
 */
export const CellOutputItemSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 2);

/**
 * Describes the message runme.parser.v1.ProcessInfoExitReason.
 * Use `create(ProcessInfoExitReasonSchema)` to create a new message.
 */
export const ProcessInfoExitReasonSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 3);

/**
 * Describes the message runme.parser.v1.CellOutputProcessInfo.
 * Use `create(CellOutputProcessInfoSchema)` to create a new message.
 */
export const CellOutputProcessInfoSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 4);

/**
 * Describes the message runme.parser.v1.CellOutput.
 * Use `create(CellOutputSchema)` to create a new message.
 */
export const CellOutputSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 5);

/**
 * Describes the message runme.parser.v1.CellExecutionSummary.
 * Use `create(CellExecutionSummarySchema)` to create a new message.
 */
export const CellExecutionSummarySchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 6);

/**
 * Describes the message runme.parser.v1.TextRange.
 * Use `create(TextRangeSchema)` to create a new message.
 */
export const TextRangeSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 7);

/**
 * Describes the message runme.parser.v1.Cell.
 * Use `create(CellSchema)` to create a new message.
 */
export const CellSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 8);

/**
 * Describes the message runme.parser.v1.RunmeSessionDocument.
 * Use `create(RunmeSessionDocumentSchema)` to create a new message.
 */
export const RunmeSessionDocumentSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 9);

/**
 * Describes the message runme.parser.v1.RunmeSession.
 * Use `create(RunmeSessionSchema)` to create a new message.
 */
export const RunmeSessionSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 10);

/**
 * Describes the message runme.parser.v1.FrontmatterRunme.
 * Use `create(FrontmatterRunmeSchema)` to create a new message.
 */
export const FrontmatterRunmeSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 11);

/**
 * Describes the message runme.parser.v1.Frontmatter.
 * Use `create(FrontmatterSchema)` to create a new message.
 */
export const FrontmatterSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 12);

/**
 * Describes the message runme.parser.v1.DeserializeRequestOptions.
 * Use `create(DeserializeRequestOptionsSchema)` to create a new message.
 */
export const DeserializeRequestOptionsSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 13);

/**
 * Describes the message runme.parser.v1.DeserializeRequest.
 * Use `create(DeserializeRequestSchema)` to create a new message.
 */
export const DeserializeRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 14);

/**
 * Describes the message runme.parser.v1.DeserializeResponse.
 * Use `create(DeserializeResponseSchema)` to create a new message.
 */
export const DeserializeResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 15);

/**
 * Describes the message runme.parser.v1.SerializeRequestOutputOptions.
 * Use `create(SerializeRequestOutputOptionsSchema)` to create a new message.
 */
export const SerializeRequestOutputOptionsSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 16);

/**
 * Describes the message runme.parser.v1.SerializeRequestOptions.
 * Use `create(SerializeRequestOptionsSchema)` to create a new message.
 */
export const SerializeRequestOptionsSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 17);

/**
 * Describes the message runme.parser.v1.SerializeRequest.
 * Use `create(SerializeRequestSchema)` to create a new message.
 */
export const SerializeRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 18);

/**
 * Describes the message runme.parser.v1.SerializeResponse.
 * Use `create(SerializeResponseSchema)` to create a new message.
 */
export const SerializeResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_parser_v1_parser, 19);

/**
 * Describes the enum runme.parser.v1.CellKind.
 */
export const CellKindSchema = /*@__PURE__*/
  enumDesc(file_runme_parser_v1_parser, 0);

/**
 * @generated from enum runme.parser.v1.CellKind
 */
export const CellKind = /*@__PURE__*/
  tsEnum(CellKindSchema);

/**
 * Describes the enum runme.parser.v1.CellRole.
 */
export const CellRoleSchema = /*@__PURE__*/
  enumDesc(file_runme_parser_v1_parser, 1);

/**
 * @generated from enum runme.parser.v1.CellRole
 */
export const CellRole = /*@__PURE__*/
  tsEnum(CellRoleSchema);

/**
 * Describes the enum runme.parser.v1.RunmeIdentity.
 */
export const RunmeIdentitySchema = /*@__PURE__*/
  enumDesc(file_runme_parser_v1_parser, 2);

/**
 * RunmeIdentity controls if unique identifiers are inserted if not present.
 *
 * @generated from enum runme.parser.v1.RunmeIdentity
 */
export const RunmeIdentity = /*@__PURE__*/
  tsEnum(RunmeIdentitySchema);

/**
 * @generated from service runme.parser.v1.ParserService
 */
export const ParserService = /*@__PURE__*/
  serviceDesc(file_runme_parser_v1_parser, 0);
