// @generated by protoc-gen-es v2.2.3 with parameter "import_extension=js"
// @generated from file runme/reporter/v1alpha1/reporter.proto (package runme.reporter.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Notebook } from "../../parser/v1/parser_pb.js";

/**
 * Describes the file runme/reporter/v1alpha1/reporter.proto.
 */
export declare const file_runme_reporter_v1alpha1_reporter: GenFile;

/**
 * @generated from message runme.reporter.v1alpha1.TransformRequest
 */
export declare type TransformRequest = Message<"runme.reporter.v1alpha1.TransformRequest"> & {
  /**
   * @generated from field: runme.parser.v1.Notebook notebook = 1;
   */
  notebook?: Notebook;

  /**
   * @generated from field: runme.reporter.v1alpha1.TransformRequestExtension extension = 2;
   */
  extension?: TransformRequestExtension;
};

/**
 * Describes the message runme.reporter.v1alpha1.TransformRequest.
 * Use `create(TransformRequestSchema)` to create a new message.
 */
export declare const TransformRequestSchema: GenMessage<TransformRequest>;

/**
 * @generated from message runme.reporter.v1alpha1.TransformRequestExtension
 */
export declare type TransformRequestExtension = Message<"runme.reporter.v1alpha1.TransformRequestExtension"> & {
  /**
   * @generated from field: optional bool auto_save = 2;
   */
  autoSave?: boolean;

  /**
   * @generated from field: optional string repository = 3;
   */
  repository?: string;

  /**
   * @generated from field: optional string branch = 4;
   */
  branch?: string;

  /**
   * @generated from field: optional string commit = 5;
   */
  commit?: string;

  /**
   * @generated from field: optional string file_path = 6;
   */
  filePath?: string;

  /**
   * @generated from field: optional bytes file_content = 7;
   */
  fileContent?: Uint8Array;

  /**
   * @generated from field: optional bytes plain_output = 8;
   */
  plainOutput?: Uint8Array;

  /**
   * @generated from field: optional bytes masked_output = 9;
   */
  maskedOutput?: Uint8Array;

  /**
   * @generated from field: optional string mac_address = 10;
   */
  macAddress?: string;

  /**
   * @generated from field: optional string hostname = 11;
   */
  hostname?: string;

  /**
   * @generated from field: optional string platform = 12;
   */
  platform?: string;

  /**
   * @generated from field: optional string release = 13;
   */
  release?: string;

  /**
   * @generated from field: optional string arch = 14;
   */
  arch?: string;

  /**
   * @generated from field: optional string vendor = 15;
   */
  vendor?: string;

  /**
   * @generated from field: optional string shell = 16;
   */
  shell?: string;

  /**
   * @generated from field: optional string vs_app_host = 17;
   */
  vsAppHost?: string;

  /**
   * @generated from field: optional string vs_app_name = 18;
   */
  vsAppName?: string;

  /**
   * @generated from field: optional string vs_app_session_id = 19;
   */
  vsAppSessionId?: string;

  /**
   * @generated from field: optional string vs_machine_id = 20;
   */
  vsMachineId?: string;

  /**
   * @generated from field: map<string, string> vs_metadata = 21;
   */
  vsMetadata: { [key: string]: string };
};

/**
 * Describes the message runme.reporter.v1alpha1.TransformRequestExtension.
 * Use `create(TransformRequestExtensionSchema)` to create a new message.
 */
export declare const TransformRequestExtensionSchema: GenMessage<TransformRequestExtension>;

/**
 * @generated from message runme.reporter.v1alpha1.TransformResponse
 */
export declare type TransformResponse = Message<"runme.reporter.v1alpha1.TransformResponse"> & {
  /**
   * @generated from field: runme.parser.v1.Notebook notebook = 1;
   */
  notebook?: Notebook;

  /**
   * @generated from field: runme.reporter.v1alpha1.ReporterExtension extension = 2;
   */
  extension?: ReporterExtension;
};

/**
 * Describes the message runme.reporter.v1alpha1.TransformResponse.
 * Use `create(TransformResponseSchema)` to create a new message.
 */
export declare const TransformResponseSchema: GenMessage<TransformResponse>;

/**
 * @generated from message runme.reporter.v1alpha1.ReporterExtension
 */
export declare type ReporterExtension = Message<"runme.reporter.v1alpha1.ReporterExtension"> & {
  /**
   * @generated from field: bool auto_save = 1;
   */
  autoSave: boolean;

  /**
   * @generated from field: runme.reporter.v1alpha1.ReporterGit git = 2;
   */
  git?: ReporterGit;

  /**
   * @generated from field: runme.reporter.v1alpha1.ReporterFile file = 3;
   */
  file?: ReporterFile;

  /**
   * @generated from field: runme.reporter.v1alpha1.ReporterSession session = 4;
   */
  session?: ReporterSession;

  /**
   * @generated from field: runme.reporter.v1alpha1.ReporterDevice device = 5;
   */
  device?: ReporterDevice;
};

/**
 * Describes the message runme.reporter.v1alpha1.ReporterExtension.
 * Use `create(ReporterExtensionSchema)` to create a new message.
 */
export declare const ReporterExtensionSchema: GenMessage<ReporterExtension>;

/**
 * @generated from message runme.reporter.v1alpha1.ReporterGit
 */
export declare type ReporterGit = Message<"runme.reporter.v1alpha1.ReporterGit"> & {
  /**
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * @generated from field: string branch = 2;
   */
  branch: string;

  /**
   * @generated from field: string commit = 3;
   */
  commit: string;
};

/**
 * Describes the message runme.reporter.v1alpha1.ReporterGit.
 * Use `create(ReporterGitSchema)` to create a new message.
 */
export declare const ReporterGitSchema: GenMessage<ReporterGit>;

/**
 * @generated from message runme.reporter.v1alpha1.ReporterSession
 */
export declare type ReporterSession = Message<"runme.reporter.v1alpha1.ReporterSession"> & {
  /**
   * @generated from field: bytes plain_output = 1;
   */
  plainOutput: Uint8Array;

  /**
   * @generated from field: bytes masked_output = 2;
   */
  maskedOutput: Uint8Array;
};

/**
 * Describes the message runme.reporter.v1alpha1.ReporterSession.
 * Use `create(ReporterSessionSchema)` to create a new message.
 */
export declare const ReporterSessionSchema: GenMessage<ReporterSession>;

/**
 * @generated from message runme.reporter.v1alpha1.ReporterFile
 */
export declare type ReporterFile = Message<"runme.reporter.v1alpha1.ReporterFile"> & {
  /**
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * @generated from field: bytes content = 2;
   */
  content: Uint8Array;
};

/**
 * Describes the message runme.reporter.v1alpha1.ReporterFile.
 * Use `create(ReporterFileSchema)` to create a new message.
 */
export declare const ReporterFileSchema: GenMessage<ReporterFile>;

/**
 * @generated from message runme.reporter.v1alpha1.ReporterDevice
 */
export declare type ReporterDevice = Message<"runme.reporter.v1alpha1.ReporterDevice"> & {
  /**
   * @generated from field: string mac_address = 1;
   */
  macAddress: string;

  /**
   * @generated from field: string hostname = 2;
   */
  hostname: string;

  /**
   * @generated from field: string platform = 3;
   */
  platform: string;

  /**
   * @generated from field: string release = 4;
   */
  release: string;

  /**
   * @generated from field: string arch = 5;
   */
  arch: string;

  /**
   * @generated from field: string vendor = 6;
   */
  vendor: string;

  /**
   * @generated from field: string shell = 7;
   */
  shell: string;

  /**
   * @generated from field: string vs_app_host = 8;
   */
  vsAppHost: string;

  /**
   * @generated from field: string vs_app_name = 9;
   */
  vsAppName: string;

  /**
   * @generated from field: string vs_app_session_id = 10;
   */
  vsAppSessionId: string;

  /**
   * @generated from field: string vs_machine_id = 11;
   */
  vsMachineId: string;

  /**
   * @generated from field: map<string, string> vs_metadata = 12;
   */
  vsMetadata: { [key: string]: string };
};

/**
 * Describes the message runme.reporter.v1alpha1.ReporterDevice.
 * Use `create(ReporterDeviceSchema)` to create a new message.
 */
export declare const ReporterDeviceSchema: GenMessage<ReporterDevice>;

/**
 * @generated from service runme.reporter.v1alpha1.ReporterService
 */
export declare const ReporterService: GenService<{
  /**
   * @generated from rpc runme.reporter.v1alpha1.ReporterService.Transform
   */
  transform: {
    methodKind: "unary";
    input: typeof TransformRequestSchema;
    output: typeof TransformResponseSchema;
  },
}>;
