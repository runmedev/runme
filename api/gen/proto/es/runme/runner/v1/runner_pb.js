// @generated by protoc-gen-es v2.2.3 with parameter "import_extension=js"
// @generated from file runme/runner/v1/runner.proto (package runme.runner.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file runme/runner/v1/runner.proto.
 */
export const file_runme_runner_v1_runner = /*@__PURE__*/
  fileDesc("ChxydW5tZS9ydW5uZXIvdjEvcnVubmVyLnByb3RvEg9ydW5tZS5ydW5uZXIudjEijgEKB1Nlc3Npb24SCgoCaWQYASABKAkSDAoEZW52cxgCIAMoCRI4CghtZXRhZGF0YRgDIAMoCzImLnJ1bm1lLnJ1bm5lci52MS5TZXNzaW9uLk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIpYCChRDcmVhdGVTZXNzaW9uUmVxdWVzdBJFCghtZXRhZGF0YRgBIAMoCzIzLnJ1bm1lLnJ1bm5lci52MS5DcmVhdGVTZXNzaW9uUmVxdWVzdC5NZXRhZGF0YUVudHJ5EgwKBGVudnMYAiADKAkSLgoHcHJvamVjdBgDIAEoCzIYLnJ1bm1lLnJ1bm5lci52MS5Qcm9qZWN0SACIAQESPAoOZW52X3N0b3JlX3R5cGUYBCABKA4yJC5ydW5tZS5ydW5uZXIudjEuU2Vzc2lvbkVudlN0b3JlVHlwZRovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAFCCgoIX3Byb2plY3QiQgoVQ3JlYXRlU2Vzc2lvblJlc3BvbnNlEikKB3Nlc3Npb24YASABKAsyGC5ydW5tZS5ydW5uZXIudjEuU2Vzc2lvbiIfChFHZXRTZXNzaW9uUmVxdWVzdBIKCgJpZBgBIAEoCSI/ChJHZXRTZXNzaW9uUmVzcG9uc2USKQoHc2Vzc2lvbhgBIAEoCzIYLnJ1bm1lLnJ1bm5lci52MS5TZXNzaW9uIhUKE0xpc3RTZXNzaW9uc1JlcXVlc3QiQgoUTGlzdFNlc3Npb25zUmVzcG9uc2USKgoIc2Vzc2lvbnMYASADKAsyGC5ydW5tZS5ydW5uZXIudjEuU2Vzc2lvbiIiChREZWxldGVTZXNzaW9uUmVxdWVzdBIKCgJpZBgBIAEoCSIXChVEZWxldGVTZXNzaW9uUmVzcG9uc2Ui0gEKB1Byb2plY3QSDAoEcm9vdBgBIAEoCRIWCg5lbnZfbG9hZF9vcmRlchgCIAMoCRIzCgplbnZfZGlyZW52GAMgASgOMh8ucnVubWUucnVubmVyLnYxLlByb2plY3QuRGlyRW52ImwKBkRpckVudhIXChNESVJfRU5WX1VOU1BFQ0lGSUVEEAASGAoURElSX0VOVl9FTkFCTEVEX1dBUk4QARIZChVESVJfRU5WX0VOQUJMRURfRVJST1IQAhIUChBESVJfRU5WX0RJU0FCTEVEEAMiOwoHV2luc2l6ZRIMCgRyb3dzGAEgASgNEgwKBGNvbHMYAiABKA0SCQoBeBgDIAEoDRIJCgF5GAQgASgNItcECg5FeGVjdXRlUmVxdWVzdBIUCgxwcm9ncmFtX25hbWUYASABKAkSEQoJYXJndW1lbnRzGAIgAygJEhEKCWRpcmVjdG9yeRgDIAEoCRIMCgRlbnZzGAQgAygJEhAKCGNvbW1hbmRzGAUgAygJEg4KBnNjcmlwdBgGIAEoCRILCgN0dHkYByABKAgSEgoKaW5wdXRfZGF0YRgIIAEoDBIqCgRzdG9wGAkgASgOMhwucnVubWUucnVubmVyLnYxLkV4ZWN1dGVTdG9wEi4KB3dpbnNpemUYCiABKAsyGC5ydW5tZS5ydW5uZXIudjEuV2luc2l6ZUgAiAEBEhIKCmJhY2tncm91bmQYCyABKAgSEgoKc2Vzc2lvbl9pZBgUIAEoCRI6ChBzZXNzaW9uX3N0cmF0ZWd5GBUgASgOMiAucnVubWUucnVubmVyLnYxLlNlc3Npb25TdHJhdGVneRIuCgdwcm9qZWN0GBYgASgLMhgucnVubWUucnVubmVyLnYxLlByb2plY3RIAYgBARIZChFzdG9yZV9sYXN0X291dHB1dBgXIAEoCBIyCgxjb21tYW5kX21vZGUYGCABKA4yHC5ydW5tZS5ydW5uZXIudjEuQ29tbWFuZE1vZGUSEwoLbGFuZ3VhZ2VfaWQYGSABKAkSFgoOZmlsZV9leHRlbnNpb24YGiABKAkSEAoIa25vd25faWQYGyABKAkSEgoKa25vd25fbmFtZRgcIAEoCRIOCgZydW5faWQYHSABKAlCCgoIX3dpbnNpemVCCgoIX3Byb2plY3QiGQoKUHJvY2Vzc1BJRBILCgNwaWQYASABKAMiqQEKD0V4ZWN1dGVSZXNwb25zZRIvCglleGl0X2NvZGUYASABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWUSEwoLc3Rkb3V0X2RhdGEYAiABKAwSEwoLc3RkZXJyX2RhdGEYAyABKAwSKAoDcGlkGAQgASgLMhsucnVubWUucnVubmVyLnYxLlByb2Nlc3NQSUQSEQoJbWltZV90eXBlGAUgASgJIioKGVJlc29sdmVQcm9ncmFtQ29tbWFuZExpc3QSDQoFbGluZXMYASADKAkiwAQKFVJlc29sdmVQcm9ncmFtUmVxdWVzdBI+Cghjb21tYW5kcxgBIAEoCzIqLnJ1bm1lLnJ1bm5lci52MS5SZXNvbHZlUHJvZ3JhbUNvbW1hbmRMaXN0SAASEAoGc2NyaXB0GAIgASgJSAASOQoEbW9kZRgDIAEoDjIrLnJ1bm1lLnJ1bm5lci52MS5SZXNvbHZlUHJvZ3JhbVJlcXVlc3QuTW9kZRILCgNlbnYYBCADKAkSEgoKc2Vzc2lvbl9pZBgFIAEoCRI6ChBzZXNzaW9uX3N0cmF0ZWd5GAYgASgOMiAucnVubWUucnVubmVyLnYxLlNlc3Npb25TdHJhdGVneRIuCgdwcm9qZWN0GAcgASgLMhgucnVubWUucnVubmVyLnYxLlByb2plY3RIAYgBARITCgtsYW5ndWFnZV9pZBgIIAEoCRJDCglyZXRlbnRpb24YCSABKA4yMC5ydW5tZS5ydW5uZXIudjEuUmVzb2x2ZVByb2dyYW1SZXF1ZXN0LlJldGVudGlvbiJECgRNb2RlEhQKEE1PREVfVU5TUEVDSUZJRUQQABITCg9NT0RFX1BST01QVF9BTEwQARIRCg1NT0RFX1NLSVBfQUxMEAIiVwoJUmV0ZW50aW9uEhkKFVJFVEVOVElPTl9VTlNQRUNJRklFRBAAEhcKE1JFVEVOVElPTl9GSVJTVF9SVU4QARIWChJSRVRFTlRJT05fTEFTVF9SVU4QAkIICgZzb3VyY2VCCgoIX3Byb2plY3Qi2gMKFlJlc29sdmVQcm9ncmFtUmVzcG9uc2USDgoGc2NyaXB0GAEgASgJEjwKCGNvbW1hbmRzGAIgASgLMioucnVubWUucnVubmVyLnYxLlJlc29sdmVQcm9ncmFtQ29tbWFuZExpc3QSPwoEdmFycxgDIAMoCzIxLnJ1bm1lLnJ1bm5lci52MS5SZXNvbHZlUHJvZ3JhbVJlc3BvbnNlLlZhclJlc3VsdBqJAQoJVmFyUmVzdWx0Ej4KBnN0YXR1cxgBIAEoDjIuLnJ1bm1lLnJ1bm5lci52MS5SZXNvbHZlUHJvZ3JhbVJlc3BvbnNlLlN0YXR1cxIMCgRuYW1lGAIgASgJEhYKDm9yaWdpbmFsX3ZhbHVlGAMgASgJEhYKDnJlc29sdmVkX3ZhbHVlGAQgASgJIqQBCgZTdGF0dXMSFgoSU1RBVFVTX1VOU1BFQ0lGSUVEEAASIgoeU1RBVFVTX1VOUkVTT0xWRURfV0lUSF9NRVNTQUdFEAESJgoiU1RBVFVTX1VOUkVTT0xWRURfV0lUSF9QTEFDRUhPTERFUhACEhMKD1NUQVRVU19SRVNPTFZFRBADEiEKHVNUQVRVU19VTlJFU09MVkVEX1dJVEhfU0VDUkVUEAQiQwoWTW9uaXRvckVudlN0b3JlUmVxdWVzdBIpCgdzZXNzaW9uGAEgASgLMhgucnVubWUucnVubmVyLnYxLlNlc3Npb24iwgQKH01vbml0b3JFbnZTdG9yZVJlc3BvbnNlU25hcHNob3QSSgoEZW52cxgBIAMoCzI8LnJ1bm1lLnJ1bm5lci52MS5Nb25pdG9yRW52U3RvcmVSZXNwb25zZVNuYXBzaG90LlNuYXBzaG90RW52Gs4CCgtTbmFwc2hvdEVudhJHCgZzdGF0dXMYASABKA4yNy5ydW5tZS5ydW5uZXIudjEuTW9uaXRvckVudlN0b3JlUmVzcG9uc2VTbmFwc2hvdC5TdGF0dXMSDAoEbmFtZRgCIAEoCRIMCgRzcGVjGAMgASgJEg4KBm9yaWdpbhgEIAEoCRIWCg5vcmlnaW5hbF92YWx1ZRgFIAEoCRIWCg5yZXNvbHZlZF92YWx1ZRgGIAEoCRITCgtjcmVhdGVfdGltZRgHIAEoCRITCgt1cGRhdGVfdGltZRgIIAEoCRJGCgZlcnJvcnMYCSADKAsyNi5ydW5tZS5ydW5uZXIudjEuTW9uaXRvckVudlN0b3JlUmVzcG9uc2VTbmFwc2hvdC5FcnJvchITCgtpc19yZXF1aXJlZBgKIAEoCBITCgtkZXNjcmlwdGlvbhgLIAEoCRomCgVFcnJvchIMCgRjb2RlGAEgASgNEg8KB21lc3NhZ2UYAiABKAkiWgoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEhIKDlNUQVRVU19MSVRFUkFMEAESEQoNU1RBVFVTX0hJRERFThACEhEKDVNUQVRVU19NQVNLRUQQAyKbAQoXTW9uaXRvckVudlN0b3JlUmVzcG9uc2USMgoEdHlwZRgBIAEoDjIkLnJ1bm1lLnJ1bm5lci52MS5Nb25pdG9yRW52U3RvcmVUeXBlEkQKCHNuYXBzaG90GAIgASgLMjAucnVubWUucnVubmVyLnYxLk1vbml0b3JFbnZTdG9yZVJlc3BvbnNlU25hcHNob3RIAEIGCgRkYXRhKl0KE1Nlc3Npb25FbnZTdG9yZVR5cGUSJgoiU0VTU0lPTl9FTlZfU1RPUkVfVFlQRV9VTlNQRUNJRklFRBAAEh4KGlNFU1NJT05fRU5WX1NUT1JFX1RZUEVfT1dMEAEqXgoLRXhlY3V0ZVN0b3ASHAoYRVhFQ1VURV9TVE9QX1VOU1BFQ0lGSUVEEAASGgoWRVhFQ1VURV9TVE9QX0lOVEVSUlVQVBABEhUKEUVYRUNVVEVfU1RPUF9LSUxMEAIqmgEKC0NvbW1hbmRNb2RlEhwKGENPTU1BTkRfTU9ERV9VTlNQRUNJRklFRBAAEh0KGUNPTU1BTkRfTU9ERV9JTkxJTkVfU0hFTEwQARIaChZDT01NQU5EX01PREVfVEVNUF9GSUxFEAISGQoVQ09NTUFORF9NT0RFX1RFUk1JTkFMEAMSFwoTQ09NTUFORF9NT0RFX0RBR0dFUhAEKlUKD1Nlc3Npb25TdHJhdGVneRIgChxTRVNTSU9OX1NUUkFURUdZX1VOU1BFQ0lGSUVEEAASIAocU0VTU0lPTl9TVFJBVEVHWV9NT1NUX1JFQ0VOVBABKmIKE01vbml0b3JFbnZTdG9yZVR5cGUSJgoiTU9OSVRPUl9FTlZfU1RPUkVfVFlQRV9VTlNQRUNJRklFRBAAEiMKH01PTklUT1JfRU5WX1NUT1JFX1RZUEVfU05BUFNIT1QQATKuBQoNUnVubmVyU2VydmljZRJgCg1DcmVhdGVTZXNzaW9uEiUucnVubWUucnVubmVyLnYxLkNyZWF0ZVNlc3Npb25SZXF1ZXN0GiYucnVubWUucnVubmVyLnYxLkNyZWF0ZVNlc3Npb25SZXNwb25zZSIAElcKCkdldFNlc3Npb24SIi5ydW5tZS5ydW5uZXIudjEuR2V0U2Vzc2lvblJlcXVlc3QaIy5ydW5tZS5ydW5uZXIudjEuR2V0U2Vzc2lvblJlc3BvbnNlIgASXQoMTGlzdFNlc3Npb25zEiQucnVubWUucnVubmVyLnYxLkxpc3RTZXNzaW9uc1JlcXVlc3QaJS5ydW5tZS5ydW5uZXIudjEuTGlzdFNlc3Npb25zUmVzcG9uc2UiABJgCg1EZWxldGVTZXNzaW9uEiUucnVubWUucnVubmVyLnYxLkRlbGV0ZVNlc3Npb25SZXF1ZXN0GiYucnVubWUucnVubmVyLnYxLkRlbGV0ZVNlc3Npb25SZXNwb25zZSIAEmgKD01vbml0b3JFbnZTdG9yZRInLnJ1bm1lLnJ1bm5lci52MS5Nb25pdG9yRW52U3RvcmVSZXF1ZXN0GigucnVubWUucnVubmVyLnYxLk1vbml0b3JFbnZTdG9yZVJlc3BvbnNlIgAwARJSCgdFeGVjdXRlEh8ucnVubWUucnVubmVyLnYxLkV4ZWN1dGVSZXF1ZXN0GiAucnVubWUucnVubmVyLnYxLkV4ZWN1dGVSZXNwb25zZSIAKAEwARJjCg5SZXNvbHZlUHJvZ3JhbRImLnJ1bm1lLnJ1bm5lci52MS5SZXNvbHZlUHJvZ3JhbVJlcXVlc3QaJy5ydW5tZS5ydW5uZXIudjEuUmVzb2x2ZVByb2dyYW1SZXNwb25zZSIAQkhaRmdpdGh1Yi5jb20vcnVubWVkZXYvcnVubWUvdjMvYXBpL2dlbi9wcm90by9nby9ydW5tZS9ydW5uZXIvdjE7cnVubmVydjFiBnByb3RvMw", [file_google_protobuf_wrappers]);

/**
 * Describes the message runme.runner.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 0);

/**
 * Describes the message runme.runner.v1.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export const CreateSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 1);

/**
 * Describes the message runme.runner.v1.CreateSessionResponse.
 * Use `create(CreateSessionResponseSchema)` to create a new message.
 */
export const CreateSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 2);

/**
 * Describes the message runme.runner.v1.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 3);

/**
 * Describes the message runme.runner.v1.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export const GetSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 4);

/**
 * Describes the message runme.runner.v1.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 5);

/**
 * Describes the message runme.runner.v1.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 6);

/**
 * Describes the message runme.runner.v1.DeleteSessionRequest.
 * Use `create(DeleteSessionRequestSchema)` to create a new message.
 */
export const DeleteSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 7);

/**
 * Describes the message runme.runner.v1.DeleteSessionResponse.
 * Use `create(DeleteSessionResponseSchema)` to create a new message.
 */
export const DeleteSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 8);

/**
 * Describes the message runme.runner.v1.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export const ProjectSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 9);

/**
 * Describes the enum runme.runner.v1.Project.DirEnv.
 */
export const Project_DirEnvSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 9, 0);

/**
 * @generated from enum runme.runner.v1.Project.DirEnv
 */
export const Project_DirEnv = /*@__PURE__*/
  tsEnum(Project_DirEnvSchema);

/**
 * Describes the message runme.runner.v1.Winsize.
 * Use `create(WinsizeSchema)` to create a new message.
 */
export const WinsizeSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 10);

/**
 * Describes the message runme.runner.v1.ExecuteRequest.
 * Use `create(ExecuteRequestSchema)` to create a new message.
 */
export const ExecuteRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 11);

/**
 * Describes the message runme.runner.v1.ProcessPID.
 * Use `create(ProcessPIDSchema)` to create a new message.
 */
export const ProcessPIDSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 12);

/**
 * Describes the message runme.runner.v1.ExecuteResponse.
 * Use `create(ExecuteResponseSchema)` to create a new message.
 */
export const ExecuteResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 13);

/**
 * Describes the message runme.runner.v1.ResolveProgramCommandList.
 * Use `create(ResolveProgramCommandListSchema)` to create a new message.
 */
export const ResolveProgramCommandListSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 14);

/**
 * Describes the message runme.runner.v1.ResolveProgramRequest.
 * Use `create(ResolveProgramRequestSchema)` to create a new message.
 */
export const ResolveProgramRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 15);

/**
 * Describes the enum runme.runner.v1.ResolveProgramRequest.Mode.
 */
export const ResolveProgramRequest_ModeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 15, 0);

/**
 * @generated from enum runme.runner.v1.ResolveProgramRequest.Mode
 */
export const ResolveProgramRequest_Mode = /*@__PURE__*/
  tsEnum(ResolveProgramRequest_ModeSchema);

/**
 * Describes the enum runme.runner.v1.ResolveProgramRequest.Retention.
 */
export const ResolveProgramRequest_RetentionSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 15, 1);

/**
 * @generated from enum runme.runner.v1.ResolveProgramRequest.Retention
 */
export const ResolveProgramRequest_Retention = /*@__PURE__*/
  tsEnum(ResolveProgramRequest_RetentionSchema);

/**
 * Describes the message runme.runner.v1.ResolveProgramResponse.
 * Use `create(ResolveProgramResponseSchema)` to create a new message.
 */
export const ResolveProgramResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 16);

/**
 * Describes the message runme.runner.v1.ResolveProgramResponse.VarResult.
 * Use `create(ResolveProgramResponse_VarResultSchema)` to create a new message.
 */
export const ResolveProgramResponse_VarResultSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 16, 0);

/**
 * Describes the enum runme.runner.v1.ResolveProgramResponse.Status.
 */
export const ResolveProgramResponse_StatusSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 16, 0);

/**
 * @generated from enum runme.runner.v1.ResolveProgramResponse.Status
 */
export const ResolveProgramResponse_Status = /*@__PURE__*/
  tsEnum(ResolveProgramResponse_StatusSchema);

/**
 * Describes the message runme.runner.v1.MonitorEnvStoreRequest.
 * Use `create(MonitorEnvStoreRequestSchema)` to create a new message.
 */
export const MonitorEnvStoreRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 17);

/**
 * Describes the message runme.runner.v1.MonitorEnvStoreResponseSnapshot.
 * Use `create(MonitorEnvStoreResponseSnapshotSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshotSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 18);

/**
 * Describes the message runme.runner.v1.MonitorEnvStoreResponseSnapshot.SnapshotEnv.
 * Use `create(MonitorEnvStoreResponseSnapshot_SnapshotEnvSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshot_SnapshotEnvSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 18, 0);

/**
 * Describes the message runme.runner.v1.MonitorEnvStoreResponseSnapshot.Error.
 * Use `create(MonitorEnvStoreResponseSnapshot_ErrorSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshot_ErrorSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 18, 1);

/**
 * Describes the enum runme.runner.v1.MonitorEnvStoreResponseSnapshot.Status.
 */
export const MonitorEnvStoreResponseSnapshot_StatusSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 18, 0);

/**
 * @generated from enum runme.runner.v1.MonitorEnvStoreResponseSnapshot.Status
 */
export const MonitorEnvStoreResponseSnapshot_Status = /*@__PURE__*/
  tsEnum(MonitorEnvStoreResponseSnapshot_StatusSchema);

/**
 * Describes the message runme.runner.v1.MonitorEnvStoreResponse.
 * Use `create(MonitorEnvStoreResponseSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v1_runner, 19);

/**
 * Describes the enum runme.runner.v1.SessionEnvStoreType.
 */
export const SessionEnvStoreTypeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 0);

/**
 * env store implementation
 *
 * @generated from enum runme.runner.v1.SessionEnvStoreType
 */
export const SessionEnvStoreType = /*@__PURE__*/
  tsEnum(SessionEnvStoreTypeSchema);

/**
 * Describes the enum runme.runner.v1.ExecuteStop.
 */
export const ExecuteStopSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 1);

/**
 * @generated from enum runme.runner.v1.ExecuteStop
 */
export const ExecuteStop = /*@__PURE__*/
  tsEnum(ExecuteStopSchema);

/**
 * Describes the enum runme.runner.v1.CommandMode.
 */
export const CommandModeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 2);

/**
 * @generated from enum runme.runner.v1.CommandMode
 */
export const CommandMode = /*@__PURE__*/
  tsEnum(CommandModeSchema);

/**
 * Describes the enum runme.runner.v1.SessionStrategy.
 */
export const SessionStrategySchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 3);

/**
 * strategy for selecting a session in an initial execute request
 *
 * @generated from enum runme.runner.v1.SessionStrategy
 */
export const SessionStrategy = /*@__PURE__*/
  tsEnum(SessionStrategySchema);

/**
 * Describes the enum runme.runner.v1.MonitorEnvStoreType.
 */
export const MonitorEnvStoreTypeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v1_runner, 4);

/**
 * @generated from enum runme.runner.v1.MonitorEnvStoreType
 */
export const MonitorEnvStoreType = /*@__PURE__*/
  tsEnum(MonitorEnvStoreTypeSchema);

/**
 * @generated from service runme.runner.v1.RunnerService
 */
export const RunnerService = /*@__PURE__*/
  serviceDesc(file_runme_runner_v1_runner, 0);
