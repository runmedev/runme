// @generated by protoc-gen-es v2.2.3 with parameter "target=js,import_extension=none,json_types=true"
// @generated from file runme/runner/v2/runner.proto (package runme.runner.v2, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import { file_runme_runner_v2_config } from "./config_pb";

/**
 * Describes the file runme/runner/v2/runner.proto.
 */
export const file_runme_runner_v2_runner = /*@__PURE__*/
  fileDesc("ChxydW5tZS9ydW5uZXIvdjIvcnVubmVyLnByb3RvEg9ydW5tZS5ydW5uZXIudjIiLwoHUHJvamVjdBIMCgRyb290GAEgASgJEhYKDmVudl9sb2FkX29yZGVyGAIgAygJIo0BCgdTZXNzaW9uEgoKAmlkGAEgASgJEgsKA2VudhgCIAMoCRI4CghtZXRhZGF0YRgDIAMoCzImLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uLk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIrIFChRDcmVhdGVTZXNzaW9uUmVxdWVzdBJFCghtZXRhZGF0YRgBIAMoCzIzLnJ1bm1lLnJ1bm5lci52Mi5DcmVhdGVTZXNzaW9uUmVxdWVzdC5NZXRhZGF0YUVudHJ5EgsKA2VudhgCIAMoCRIuCgdwcm9qZWN0GAMgASgLMhgucnVubWUucnVubmVyLnYyLlByb2plY3RIAIgBARJBCg5lbnZfc3RvcmVfdHlwZRgEIAEoDjIkLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uRW52U3RvcmVUeXBlSAGIAQESPAoGY29uZmlnGAUgASgLMiwucnVubWUucnVubmVyLnYyLkNyZWF0ZVNlc3Npb25SZXF1ZXN0LkNvbmZpZxovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaxAIKBkNvbmZpZxJBCg5lbnZfc3RvcmVfdHlwZRgBIAEoDjIkLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uRW52U3RvcmVUeXBlSACIAQESYwoRZW52X3N0b3JlX3NlZWRpbmcYAiABKA4yQy5ydW5tZS5ydW5uZXIudjIuQ3JlYXRlU2Vzc2lvblJlcXVlc3QuQ29uZmlnLlNlc3Npb25FbnZTdG9yZVNlZWRpbmdIAYgBASJpChZTZXNzaW9uRW52U3RvcmVTZWVkaW5nEikKJVNFU1NJT05fRU5WX1NUT1JFX1NFRURJTkdfVU5TUEVDSUZJRUQQABIkCiBTRVNTSU9OX0VOVl9TVE9SRV9TRUVESU5HX1NZU1RFTRABQhEKD19lbnZfc3RvcmVfdHlwZUIUChJfZW52X3N0b3JlX3NlZWRpbmdCCgoIX3Byb2plY3RCEQoPX2Vudl9zdG9yZV90eXBlIkIKFUNyZWF0ZVNlc3Npb25SZXNwb25zZRIpCgdzZXNzaW9uGAEgASgLMhgucnVubWUucnVubmVyLnYyLlNlc3Npb24iHwoRR2V0U2Vzc2lvblJlcXVlc3QSCgoCaWQYASABKAkiPwoSR2V0U2Vzc2lvblJlc3BvbnNlEikKB3Nlc3Npb24YASABKAsyGC5ydW5tZS5ydW5uZXIudjIuU2Vzc2lvbiIVChNMaXN0U2Vzc2lvbnNSZXF1ZXN0IkIKFExpc3RTZXNzaW9uc1Jlc3BvbnNlEioKCHNlc3Npb25zGAEgAygLMhgucnVubWUucnVubmVyLnYyLlNlc3Npb24i4wEKFFVwZGF0ZVNlc3Npb25SZXF1ZXN0EgoKAmlkGAEgASgJEkUKCG1ldGFkYXRhGAIgAygLMjMucnVubWUucnVubmVyLnYyLlVwZGF0ZVNlc3Npb25SZXF1ZXN0Lk1ldGFkYXRhRW50cnkSCwoDZW52GAMgAygJEi4KB3Byb2plY3QYBCABKAsyGC5ydW5tZS5ydW5uZXIudjIuUHJvamVjdEgAiAEBGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIKCghfcHJvamVjdCJCChVVcGRhdGVTZXNzaW9uUmVzcG9uc2USKQoHc2Vzc2lvbhgBIAEoCzIYLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uIiIKFERlbGV0ZVNlc3Npb25SZXF1ZXN0EgoKAmlkGAEgASgJIhcKFURlbGV0ZVNlc3Npb25SZXNwb25zZSI7CgdXaW5zaXplEgwKBHJvd3MYASABKA0SDAoEY29scxgCIAEoDRIJCgF4GAMgASgNEgkKAXkYBCABKA0i5QIKDkV4ZWN1dGVSZXF1ZXN0Ei4KBmNvbmZpZxgBIAEoCzIeLnJ1bm1lLnJ1bm5lci52Mi5Qcm9ncmFtQ29uZmlnEhIKCmlucHV0X2RhdGEYCCABKAwSKgoEc3RvcBgJIAEoDjIcLnJ1bm1lLnJ1bm5lci52Mi5FeGVjdXRlU3RvcBIuCgd3aW5zaXplGAogASgLMhgucnVubWUucnVubmVyLnYyLldpbnNpemVIAIgBARISCgpzZXNzaW9uX2lkGBQgASgJEjoKEHNlc3Npb25fc3RyYXRlZ3kYFSABKA4yIC5ydW5tZS5ydW5uZXIudjIuU2Vzc2lvblN0cmF0ZWd5Ei4KB3Byb2plY3QYFiABKAsyGC5ydW5tZS5ydW5uZXIudjIuUHJvamVjdEgBiAEBEhsKE3N0b3JlX3N0ZG91dF9pbl9lbnYYFyABKAhCCgoIX3dpbnNpemVCCgoIX3Byb2plY3QiqgEKD0V4ZWN1dGVSZXNwb25zZRIvCglleGl0X2NvZGUYASABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWUSEwoLc3Rkb3V0X2RhdGEYAiABKAwSEwoLc3RkZXJyX2RhdGEYAyABKAwSKQoDcGlkGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlEhEKCW1pbWVfdHlwZRgFIAEoCSLsAgoVRXhlY3V0ZU9uZVNob3RSZXF1ZXN0Ei4KBmNvbmZpZxgBIAEoCzIeLnJ1bm1lLnJ1bm5lci52Mi5Qcm9ncmFtQ29uZmlnEhIKCmlucHV0X2RhdGEYCCABKAwSKgoEc3RvcBgJIAEoDjIcLnJ1bm1lLnJ1bm5lci52Mi5FeGVjdXRlU3RvcBIuCgd3aW5zaXplGAogASgLMhgucnVubWUucnVubmVyLnYyLldpbnNpemVIAIgBARISCgpzZXNzaW9uX2lkGBQgASgJEjoKEHNlc3Npb25fc3RyYXRlZ3kYFSABKA4yIC5ydW5tZS5ydW5uZXIudjIuU2Vzc2lvblN0cmF0ZWd5Ei4KB3Byb2plY3QYFiABKAsyGC5ydW5tZS5ydW5uZXIudjIuUHJvamVjdEgBiAEBEhsKE3N0b3JlX3N0ZG91dF9pbl9lbnYYFyABKAhCCgoIX3dpbnNpemVCCgoIX3Byb2plY3QisQEKFkV4ZWN1dGVPbmVTaG90UmVzcG9uc2USLwoJZXhpdF9jb2RlGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlEhMKC3N0ZG91dF9kYXRhGAIgASgMEhMKC3N0ZGVycl9kYXRhGAMgASgMEikKA3BpZBgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50MzJWYWx1ZRIRCgltaW1lX3R5cGUYBSABKAkiKgoZUmVzb2x2ZVByb2dyYW1Db21tYW5kTGlzdBINCgVsaW5lcxgBIAMoCSLABAoVUmVzb2x2ZVByb2dyYW1SZXF1ZXN0Ej4KCGNvbW1hbmRzGAEgASgLMioucnVubWUucnVubmVyLnYyLlJlc29sdmVQcm9ncmFtQ29tbWFuZExpc3RIABIQCgZzY3JpcHQYAiABKAlIABI5CgRtb2RlGAMgASgOMisucnVubWUucnVubmVyLnYyLlJlc29sdmVQcm9ncmFtUmVxdWVzdC5Nb2RlEgsKA2VudhgEIAMoCRISCgpzZXNzaW9uX2lkGAUgASgJEjoKEHNlc3Npb25fc3RyYXRlZ3kYBiABKA4yIC5ydW5tZS5ydW5uZXIudjIuU2Vzc2lvblN0cmF0ZWd5Ei4KB3Byb2plY3QYByABKAsyGC5ydW5tZS5ydW5uZXIudjIuUHJvamVjdEgBiAEBEhMKC2xhbmd1YWdlX2lkGAggASgJEkMKCXJldGVudGlvbhgJIAEoDjIwLnJ1bm1lLnJ1bm5lci52Mi5SZXNvbHZlUHJvZ3JhbVJlcXVlc3QuUmV0ZW50aW9uIkQKBE1vZGUSFAoQTU9ERV9VTlNQRUNJRklFRBAAEhMKD01PREVfUFJPTVBUX0FMTBABEhEKDU1PREVfU0tJUF9BTEwQAiJXCglSZXRlbnRpb24SGQoVUkVURU5USU9OX1VOU1BFQ0lGSUVEEAASFwoTUkVURU5USU9OX0ZJUlNUX1JVThABEhYKElJFVEVOVElPTl9MQVNUX1JVThACQggKBnNvdXJjZUIKCghfcHJvamVjdCLaAwoWUmVzb2x2ZVByb2dyYW1SZXNwb25zZRIOCgZzY3JpcHQYASABKAkSPAoIY29tbWFuZHMYAiABKAsyKi5ydW5tZS5ydW5uZXIudjIuUmVzb2x2ZVByb2dyYW1Db21tYW5kTGlzdBI/CgR2YXJzGAMgAygLMjEucnVubWUucnVubmVyLnYyLlJlc29sdmVQcm9ncmFtUmVzcG9uc2UuVmFyUmVzdWx0GokBCglWYXJSZXN1bHQSPgoGc3RhdHVzGAEgASgOMi4ucnVubWUucnVubmVyLnYyLlJlc29sdmVQcm9ncmFtUmVzcG9uc2UuU3RhdHVzEgwKBG5hbWUYAiABKAkSFgoOb3JpZ2luYWxfdmFsdWUYAyABKAkSFgoOcmVzb2x2ZWRfdmFsdWUYBCABKAkipAEKBlN0YXR1cxIWChJTVEFUVVNfVU5TUEVDSUZJRUQQABITCg9TVEFUVVNfUkVTT0xWRUQQARIiCh5TVEFUVVNfVU5SRVNPTFZFRF9XSVRIX01FU1NBR0UQAhImCiJTVEFUVVNfVU5SRVNPTFZFRF9XSVRIX1BMQUNFSE9MREVSEAMSIQodU1RBVFVTX1VOUkVTT0xWRURfV0lUSF9TRUNSRVQQBCJDChZNb25pdG9yRW52U3RvcmVSZXF1ZXN0EikKB3Nlc3Npb24YASABKAsyGC5ydW5tZS5ydW5uZXIudjIuU2Vzc2lvbiLCBAofTW9uaXRvckVudlN0b3JlUmVzcG9uc2VTbmFwc2hvdBJKCgRlbnZzGAEgAygLMjwucnVubWUucnVubmVyLnYyLk1vbml0b3JFbnZTdG9yZVJlc3BvbnNlU25hcHNob3QuU25hcHNob3RFbnYazgIKC1NuYXBzaG90RW52EkcKBnN0YXR1cxgBIAEoDjI3LnJ1bm1lLnJ1bm5lci52Mi5Nb25pdG9yRW52U3RvcmVSZXNwb25zZVNuYXBzaG90LlN0YXR1cxIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEgwKBHNwZWMYBCABKAkSEwoLaXNfcmVxdWlyZWQYBSABKAgSDgoGb3JpZ2luGAYgASgJEhYKDm9yaWdpbmFsX3ZhbHVlGAcgASgJEhYKDnJlc29sdmVkX3ZhbHVlGAggASgJEhMKC2NyZWF0ZV90aW1lGAkgASgJEhMKC3VwZGF0ZV90aW1lGAogASgJEkYKBmVycm9ycxgLIAMoCzI2LnJ1bm1lLnJ1bm5lci52Mi5Nb25pdG9yRW52U3RvcmVSZXNwb25zZVNuYXBzaG90LkVycm9yGiYKBUVycm9yEgwKBGNvZGUYASABKA0SDwoHbWVzc2FnZRgCIAEoCSJaCgZTdGF0dXMSFgoSU1RBVFVTX1VOU1BFQ0lGSUVEEAASEgoOU1RBVFVTX0xJVEVSQUwQARIRCg1TVEFUVVNfSElEREVOEAISEQoNU1RBVFVTX01BU0tFRBADIpsBChdNb25pdG9yRW52U3RvcmVSZXNwb25zZRIyCgR0eXBlGAEgASgOMiQucnVubWUucnVubmVyLnYyLk1vbml0b3JFbnZTdG9yZVR5cGUSRAoIc25hcHNob3QYAiABKAsyMC5ydW5tZS5ydW5uZXIudjIuTW9uaXRvckVudlN0b3JlUmVzcG9uc2VTbmFwc2hvdEgAQgYKBGRhdGEqXQoTU2Vzc2lvbkVudlN0b3JlVHlwZRImCiJTRVNTSU9OX0VOVl9TVE9SRV9UWVBFX1VOU1BFQ0lGSUVEEAASHgoaU0VTU0lPTl9FTlZfU1RPUkVfVFlQRV9PV0wQASpeCgtFeGVjdXRlU3RvcBIcChhFWEVDVVRFX1NUT1BfVU5TUEVDSUZJRUQQABIaChZFWEVDVVRFX1NUT1BfSU5URVJSVVBUEAESFQoRRVhFQ1VURV9TVE9QX0tJTEwQAipVCg9TZXNzaW9uU3RyYXRlZ3kSIAocU0VTU0lPTl9TVFJBVEVHWV9VTlNQRUNJRklFRBAAEiAKHFNFU1NJT05fU1RSQVRFR1lfTU9TVF9SRUNFTlQQASpiChNNb25pdG9yRW52U3RvcmVUeXBlEiYKIk1PTklUT1JfRU5WX1NUT1JFX1RZUEVfVU5TUEVDSUZJRUQQABIjCh9NT05JVE9SX0VOVl9TVE9SRV9UWVBFX1NOQVBTSE9UEAEy9wYKDVJ1bm5lclNlcnZpY2USYAoNQ3JlYXRlU2Vzc2lvbhIlLnJ1bm1lLnJ1bm5lci52Mi5DcmVhdGVTZXNzaW9uUmVxdWVzdBomLnJ1bm1lLnJ1bm5lci52Mi5DcmVhdGVTZXNzaW9uUmVzcG9uc2UiABJXCgpHZXRTZXNzaW9uEiIucnVubWUucnVubmVyLnYyLkdldFNlc3Npb25SZXF1ZXN0GiMucnVubWUucnVubmVyLnYyLkdldFNlc3Npb25SZXNwb25zZSIAEl0KDExpc3RTZXNzaW9ucxIkLnJ1bm1lLnJ1bm5lci52Mi5MaXN0U2Vzc2lvbnNSZXF1ZXN0GiUucnVubWUucnVubmVyLnYyLkxpc3RTZXNzaW9uc1Jlc3BvbnNlIgASYAoNVXBkYXRlU2Vzc2lvbhIlLnJ1bm1lLnJ1bm5lci52Mi5VcGRhdGVTZXNzaW9uUmVxdWVzdBomLnJ1bm1lLnJ1bm5lci52Mi5VcGRhdGVTZXNzaW9uUmVzcG9uc2UiABJgCg1EZWxldGVTZXNzaW9uEiUucnVubWUucnVubmVyLnYyLkRlbGV0ZVNlc3Npb25SZXF1ZXN0GiYucnVubWUucnVubmVyLnYyLkRlbGV0ZVNlc3Npb25SZXNwb25zZSIAEmgKD01vbml0b3JFbnZTdG9yZRInLnJ1bm1lLnJ1bm5lci52Mi5Nb25pdG9yRW52U3RvcmVSZXF1ZXN0GigucnVubWUucnVubmVyLnYyLk1vbml0b3JFbnZTdG9yZVJlc3BvbnNlIgAwARJSCgdFeGVjdXRlEh8ucnVubWUucnVubmVyLnYyLkV4ZWN1dGVSZXF1ZXN0GiAucnVubWUucnVubmVyLnYyLkV4ZWN1dGVSZXNwb25zZSIAKAEwARJlCg5FeGVjdXRlT25lU2hvdBImLnJ1bm1lLnJ1bm5lci52Mi5FeGVjdXRlT25lU2hvdFJlcXVlc3QaJy5ydW5tZS5ydW5uZXIudjIuRXhlY3V0ZU9uZVNob3RSZXNwb25zZSIAMAESYwoOUmVzb2x2ZVByb2dyYW0SJi5ydW5tZS5ydW5uZXIudjIuUmVzb2x2ZVByb2dyYW1SZXF1ZXN0GicucnVubWUucnVubmVyLnYyLlJlc29sdmVQcm9ncmFtUmVzcG9uc2UiAEJMWkpnaXRodWIuY29tL3N0YXRlZnVsL3J1bm1lL3YzL3BrZy9hcGkvZ2VuL3Byb3RvL2dvL3J1bm1lL3J1bm5lci92MjtydW5uZXJ2MmIGcHJvdG8z", [file_google_protobuf_wrappers, file_runme_runner_v2_config]);

/**
 * Describes the message runme.runner.v2.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export const ProjectSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 0);

/**
 * Describes the message runme.runner.v2.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 1);

/**
 * Describes the message runme.runner.v2.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export const CreateSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 2);

/**
 * Describes the message runme.runner.v2.CreateSessionRequest.Config.
 * Use `create(CreateSessionRequest_ConfigSchema)` to create a new message.
 */
export const CreateSessionRequest_ConfigSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 2, 0);

/**
 * Describes the enum runme.runner.v2.CreateSessionRequest.Config.SessionEnvStoreSeeding.
 */
export const CreateSessionRequest_Config_SessionEnvStoreSeedingSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 2, 0, 0);

/**
 * @generated from enum runme.runner.v2.CreateSessionRequest.Config.SessionEnvStoreSeeding
 */
export const CreateSessionRequest_Config_SessionEnvStoreSeeding = /*@__PURE__*/
  tsEnum(CreateSessionRequest_Config_SessionEnvStoreSeedingSchema);

/**
 * Describes the message runme.runner.v2.CreateSessionResponse.
 * Use `create(CreateSessionResponseSchema)` to create a new message.
 */
export const CreateSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 3);

/**
 * Describes the message runme.runner.v2.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 4);

/**
 * Describes the message runme.runner.v2.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export const GetSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 5);

/**
 * Describes the message runme.runner.v2.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 6);

/**
 * Describes the message runme.runner.v2.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 7);

/**
 * Describes the message runme.runner.v2.UpdateSessionRequest.
 * Use `create(UpdateSessionRequestSchema)` to create a new message.
 */
export const UpdateSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 8);

/**
 * Describes the message runme.runner.v2.UpdateSessionResponse.
 * Use `create(UpdateSessionResponseSchema)` to create a new message.
 */
export const UpdateSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 9);

/**
 * Describes the message runme.runner.v2.DeleteSessionRequest.
 * Use `create(DeleteSessionRequestSchema)` to create a new message.
 */
export const DeleteSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 10);

/**
 * Describes the message runme.runner.v2.DeleteSessionResponse.
 * Use `create(DeleteSessionResponseSchema)` to create a new message.
 */
export const DeleteSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 11);

/**
 * Describes the message runme.runner.v2.Winsize.
 * Use `create(WinsizeSchema)` to create a new message.
 */
export const WinsizeSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 12);

/**
 * Describes the message runme.runner.v2.ExecuteRequest.
 * Use `create(ExecuteRequestSchema)` to create a new message.
 */
export const ExecuteRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 13);

/**
 * Describes the message runme.runner.v2.ExecuteResponse.
 * Use `create(ExecuteResponseSchema)` to create a new message.
 */
export const ExecuteResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 14);

/**
 * Describes the message runme.runner.v2.ExecuteOneShotRequest.
 * Use `create(ExecuteOneShotRequestSchema)` to create a new message.
 */
export const ExecuteOneShotRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 15);

/**
 * Describes the message runme.runner.v2.ExecuteOneShotResponse.
 * Use `create(ExecuteOneShotResponseSchema)` to create a new message.
 */
export const ExecuteOneShotResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 16);

/**
 * Describes the message runme.runner.v2.ResolveProgramCommandList.
 * Use `create(ResolveProgramCommandListSchema)` to create a new message.
 */
export const ResolveProgramCommandListSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 17);

/**
 * Describes the message runme.runner.v2.ResolveProgramRequest.
 * Use `create(ResolveProgramRequestSchema)` to create a new message.
 */
export const ResolveProgramRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 18);

/**
 * Describes the enum runme.runner.v2.ResolveProgramRequest.Mode.
 */
export const ResolveProgramRequest_ModeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 18, 0);

/**
 * @generated from enum runme.runner.v2.ResolveProgramRequest.Mode
 */
export const ResolveProgramRequest_Mode = /*@__PURE__*/
  tsEnum(ResolveProgramRequest_ModeSchema);

/**
 * Describes the enum runme.runner.v2.ResolveProgramRequest.Retention.
 */
export const ResolveProgramRequest_RetentionSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 18, 1);

/**
 * @generated from enum runme.runner.v2.ResolveProgramRequest.Retention
 */
export const ResolveProgramRequest_Retention = /*@__PURE__*/
  tsEnum(ResolveProgramRequest_RetentionSchema);

/**
 * Describes the message runme.runner.v2.ResolveProgramResponse.
 * Use `create(ResolveProgramResponseSchema)` to create a new message.
 */
export const ResolveProgramResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 19);

/**
 * Describes the message runme.runner.v2.ResolveProgramResponse.VarResult.
 * Use `create(ResolveProgramResponse_VarResultSchema)` to create a new message.
 */
export const ResolveProgramResponse_VarResultSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 19, 0);

/**
 * Describes the enum runme.runner.v2.ResolveProgramResponse.Status.
 */
export const ResolveProgramResponse_StatusSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 19, 0);

/**
 * @generated from enum runme.runner.v2.ResolveProgramResponse.Status
 */
export const ResolveProgramResponse_Status = /*@__PURE__*/
  tsEnum(ResolveProgramResponse_StatusSchema);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreRequest.
 * Use `create(MonitorEnvStoreRequestSchema)` to create a new message.
 */
export const MonitorEnvStoreRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 20);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponseSnapshot.
 * Use `create(MonitorEnvStoreResponseSnapshotSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshotSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 21);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponseSnapshot.SnapshotEnv.
 * Use `create(MonitorEnvStoreResponseSnapshot_SnapshotEnvSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshot_SnapshotEnvSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 21, 0);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponseSnapshot.Error.
 * Use `create(MonitorEnvStoreResponseSnapshot_ErrorSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshot_ErrorSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 21, 1);

/**
 * Describes the enum runme.runner.v2.MonitorEnvStoreResponseSnapshot.Status.
 */
export const MonitorEnvStoreResponseSnapshot_StatusSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 21, 0);

/**
 * @generated from enum runme.runner.v2.MonitorEnvStoreResponseSnapshot.Status
 */
export const MonitorEnvStoreResponseSnapshot_Status = /*@__PURE__*/
  tsEnum(MonitorEnvStoreResponseSnapshot_StatusSchema);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponse.
 * Use `create(MonitorEnvStoreResponseSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 22);

/**
 * Describes the enum runme.runner.v2.SessionEnvStoreType.
 */
export const SessionEnvStoreTypeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 0);

/**
 * env store implementation
 *
 * @generated from enum runme.runner.v2.SessionEnvStoreType
 */
export const SessionEnvStoreType = /*@__PURE__*/
  tsEnum(SessionEnvStoreTypeSchema);

/**
 * Describes the enum runme.runner.v2.ExecuteStop.
 */
export const ExecuteStopSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 1);

/**
 * @generated from enum runme.runner.v2.ExecuteStop
 */
export const ExecuteStop = /*@__PURE__*/
  tsEnum(ExecuteStopSchema);

/**
 * Describes the enum runme.runner.v2.SessionStrategy.
 */
export const SessionStrategySchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 2);

/**
 * SessionStrategy determines a session selection in
 * an initial execute request.
 *
 * @generated from enum runme.runner.v2.SessionStrategy
 */
export const SessionStrategy = /*@__PURE__*/
  tsEnum(SessionStrategySchema);

/**
 * Describes the enum runme.runner.v2.MonitorEnvStoreType.
 */
export const MonitorEnvStoreTypeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 3);

/**
 * @generated from enum runme.runner.v2.MonitorEnvStoreType
 */
export const MonitorEnvStoreType = /*@__PURE__*/
  tsEnum(MonitorEnvStoreTypeSchema);

/**
 * @generated from service runme.runner.v2.RunnerService
 */
export const RunnerService = /*@__PURE__*/
  serviceDesc(file_runme_runner_v2_runner, 0);

